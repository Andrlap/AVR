/* writen on
nRF24L01
Single Chip 2.4GHz Transceiver
Product Specification
NORDIC SEMICONDUCTOR
Интерфейс взаимодействия с модулем nRF24L01
*/

#ifndef _NRF24L01_H_
#define _NRF24L01_H_


#include <util/delay.h>
#include <stdio.h>
#include "pin.h"

/* Table 16. Command set for the nRF24L01 SPI */
#define NRF24L01_SPI_NOP				0xFF
#define NRF24L01_SPI_R_REGISTER(r)		(0x00 | (0x1F & r))
#define NRF24L01_SPI_W_REGISTER(r)		(0x20 | (0x1F & r))
#define NRF24L01_SPI_R_RX_PAYLOAD		(0x61)
#define NRF24L01_SPI_W_TX_PAYLOAD		(0xA0)
#define NRF24L01_SPI_FLUSH_TX			0xE1
#define NRF24L01_SPI_FLUSH_RX			0xE2
#define NRF24L01_SPI_REUSE_TX_PL		0xE3
#define NRF24L01_SPI_ACTIVATE			0x50
#define NRF24L01_SPI_R_RX_PL_WID		0x60
#define NRF24L01_SPI_W_ACK_PAYLOAD		0b10101000
#define NRF24L01_SPI_W_TX_PAYLOAD_NOACK 0xB0

//CE and CSN functions
#define nrf24l01_CSNlo  rf24_PIN_CSN_0; // define in pin.h
#define nrf24l01_CSNhi  rf24_PIN_CSN_1;
#define nrf24l01_CElo   rf24_PIN_CE_0;
#define nrf24l01_CEhi   rf24_PIN_CE_1;
/******SPI_COMMAND********************************/

/******NRF24L01_I/O*******************************/

#define nrf24l01_cmd_status(b)			rf24_cmd_status(b)
#define nrf24l01_wr2_rd(r, v)			rf24_wr2_rd  (r, v)
#define nrf24l01_rd_reg_byte(r)			rf24_wr2_rd  (NRF24L01_SPI_R_REGISTER(r), NRF24L01_SPI_NOP)
#define nrf24l01_rd_reg_bytes(r, b, l)	rf24_rd_bytes(NRF24L01_SPI_R_REGISTER(r),b,l)
#define nrf24l01_wr_reg_byte(r, b)		rf24_wr2_rd  (NRF24L01_SPI_W_REGISTER(r), b)
#define nrf24l01_wr_reg_bytes(r, b, l)	rf24_wr_bytes(NRF24L01_SPI_W_REGISTER(r),b,l)
#define NRF24L01_R_RX_PAYLOAD(b, l)		rf24_rd_bytes(NRF24L01_SPI_R_RX_PAYLOAD,b,l)
#define NRF24L01_W_TX_PAYLOAD(b, l)		rf24_wr_bytes(NRF24L01_SPI_W_TX_PAYLOAD,b,l)
#define NRF24L01_W_ACK_PAYLOAD(b, l)	rf24_wr_bytes(NRF24L01_SPI_W_ACK_PAYLOAD)

#define nrf24l01_reg_set(r, m, v) nrf24l01_wr_reg_byte(r, (nrf24l01_rd_reg_byte(r) & ~(m)) | ((v) & (m)))


/* Memory Map */
#define NRF24L01_REG_CONFIG      0x00
#define NRF24L01_REG_EN_AA       0x01
#define NRF24L01_REG_EN_RXADDR   0x02
#define NRF24L01_REG_SETUP_AW    0x03
#define NRF24L01_REG_SETUP_RETR  0x04
#define NRF24L01_REG_RF_CH       0x05
#define NRF24L01_REG_RF_SETUP    0x06
#define NRF24L01_REG_STATUS      0x07
#define NRF24L01_REG_OBSERVE_TX  0x08
#define NRF24L01_REG_CD          0x09
#define NRF24L01_REG_RX_ADDR_P0  0x0A
#define NRF24L01_REG_RX_ADDR_P1  0x0B
#define NRF24L01_REG_RX_ADDR_P2  0x0C
#define NRF24L01_REG_RX_ADDR_P3  0x0D
#define NRF24L01_REG_RX_ADDR_P4  0x0E
#define NRF24L01_REG_RX_ADDR_P5  0x0F
#define NRF24L01_REG_TX_ADDR     0x10
#define NRF24L01_REG_RX_PW_P0    0x11
#define NRF24L01_REG_RX_PW_P1    0x12
#define NRF24L01_REG_RX_PW_P2    0x13
#define NRF24L01_REG_RX_PW_P3    0x14
#define NRF24L01_REG_RX_PW_P4    0x15
#define NRF24L01_REG_RX_PW_P5    0x16
#define NRF24L01_REG_FIFO_STATUS 0x17
#define NRF24L01_REG_DYNPD	     0x1C
#define NRF24L01_REG_FEATURE     0x1D

/* Bit Mnemonics */
#define NRF24L01_CONFIG             nrf24l01_rd_reg_byte(NRF24L01_REG_CONFIG)
#define NRF24L01_CONFIG_W(r, s)     nrf24l01_reg_set(NRF24L01_REG_CONFIG, r, s)
#define NRF24L01_EN_AA              nrf24l01_rd_reg_byte(NRF24L01_REG_EN_AA)
#define NRF24L01_EN_AA_W(s)         nrf24l01_reg_set(NRF24L01_REG_EN_AA, 0b111111, s)
#define NRF24L01_EN_RXADDR          nrf24l01_rd_reg_byte(NRF24L01_REG_EN_RXADDR)
#define NRF24L01_EN_RXADDR_W(s)		nrf24l01_reg_set(NRF24L01_REG_EN_RXADDR, 0b111111, s)
#define NRF24L01_SETUP_AW			nrf24l01_rd_reg_byte(NRF24L01_REG_SETUP_AW)
#define NRF24L01_SETUP_AW_W(s)		nrf24l01_reg_set(NRF24L01_REG_SETUP_AW, 0b11, (s==3)?0b01:(s==4)?0b10:(s==5)?0b11:0)
#define NRF24L01_SETUP_RETR			nrf24l01_rd_reg_byte(NRF24L01_REG_SETUP_RETR)
// NRF24L01_ARD_ARC_SET(n{0..15} retries 250..4000?S, t{0..15}: Up to 0..15 Re-Transmit on fail of AA)
#define NRF24L01_SETUP_RETR_W(t, n)  nrf24l01_reg_set(NRF24L01_REG_SETUP_RETR, 0xFF, ((((n / 250) - 1) << 4) & 0xF0) | (t & 0x0F))
//NRF24L01_REG_RF_CH_SET({0..126}: RF channel 2400 + x [MHz])
#define NRF24L01_RF_CH               nrf24l01_rd_reg_byte(NRF24L01_REG_RF_CH)
#define NRF24L01_RF_CH_W(s)          nrf24l01_wr_reg_byte(NRF24L01_REG_RF_CH, s)
#define NRF24L01_RF_SETUP            nrf24l01_rd_reg_byte(NRF24L01_REG_RF_SETUP)
#define NRF24L01_RF_SETUP_W(m, s)    nrf24l01_reg_set(NRF24L01_REG_RF_SETUP, m, s)
#define NRF24L01_STATUS				 nrf24l01_cmd_status(NRF24L01_SPI_NOP)
#define NRF24L01_STATUS_W(m, s)      nrf24l01_reg_set(NRF24L01_REG_STATUS, m, s)
#define NRF24L01_OBSERVE_TX          nrf24l01_rd_reg_byte(NRF24L01_REG_OBSERVE_TX)
#define NRF24L01_CD					 nrf24l01_rd_reg_byte(NRF24L01_REG_CD)
#define NRF24L01_RX_ADDR_P0(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_RX_ADDR_P0, b, l)
#define NRF24L01_RX_ADDR_P1(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_RX_ADDR_P1, b, l)
#define NRF24L01_RX_ADDR_P2(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_RX_ADDR_P2, b, l)
#define NRF24L01_RX_ADDR_P3(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_RX_ADDR_P3, b, l)
#define NRF24L01_RX_ADDR_P4(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_RX_ADDR_P4, b, l)
#define NRF24L01_RX_ADDR_P5(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_RX_ADDR_P5, b, l)

//#define NRF24L01_RX_ADDR_P0_W(b, ad)	nrf24l01_wr_addr(NRF24L01_REG_RX_ADDR_P0, b, ad)
//#define NRF24L01_RX_ADDR_P1_W(b, ad)	nrf24l01_wr_addr(NRF24L01_REG_RX_ADDR_P1, b, ad)
//#define NRF24L01_RX_ADDR_P2_W(b, ad)	nrf24l01_wr_addr(NRF24L01_REG_RX_ADDR_P2, b, ad)
//#define NRF24L01_RX_ADDR_P3_W(b, ad)	nrf24l01_wr_addr(NRF24L01_REG_RX_ADDR_P3, b, ad)
//#define NRF24L01_RX_ADDR_P4_W(b, ad)	nrf24l01_wr_addr(NRF24L01_REG_RX_ADDR_P4, b, ad)
//#define NRF24L01_RX_ADDR_P5_W(b, ad)	nrf24l01_wr_addr(NRF24L01_REG_RX_ADDR_P5, b, ad)
#define NRF24L01_TX_ADDR(b, l)			nrf24l01_wr_reg_bytes(NRF24L01_REG_TX_ADDR, b, l)
//#define NRF24L01_TX_ADDR_W(b, ad)		nrf24l01_wr_addr(NRF24L01_REG_TX_ADDR, b, ad)
// #define NRF24L01_RX_ADDR_P0_W(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_RX_ADDR_P0, b, l)
// #define NRF24L01_RX_ADDR_P1_W(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_RX_ADDR_P1, b, l)
// #define NRF24L01_RX_ADDR_P2_W(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_RX_ADDR_P2, b, l)
// #define NRF24L01_RX_ADDR_P3_W(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_RX_ADDR_P3, b, l)
// #define NRF24L01_RX_ADDR_P4_W(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_RX_ADDR_P4, b, l)
// #define NRF24L01_RX_ADDR_P5_W(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_RX_ADDR_P5, b, l)
// #define NRF24L01_TX_ADDR(b, l)		nrf24l01_rd_reg_bytes(NRF24L01_REG_TX_ADDR, b, l)
// #define NRF24L01_TX_ADDR_W(b, l)	nrf24l01_wr_reg_bytes(NRF24L01_REG_TX_ADDR, b, l)

//extern uint8_t nrf24l01_rx_addr(uint8_t p, uint8_t b);
//extern uint8_t nrf24l01_rx_pw(uint8_t p);
#define NRF24L01_RX_PW_P0			nrf24l01_rd_reg_byte(NRF24L01_REG_RX_PW_P0)
#define NRF24L01_RX_PW_P1			nrf24l01_rd_reg_byte(NRF24L01_REG_RX_PW_P1)
#define NRF24L01_RX_PW_P2			nrf24l01_rd_reg_byte(NRF24L01_REG_RX_PW_P2)
#define NRF24L01_RX_PW_P3			nrf24l01_rd_reg_byte(NRF24L01_REG_RX_PW_P3)
#define NRF24L01_RX_PW_P4			nrf24l01_rd_reg_byte(NRF24L01_REG_RX_PW_P4)
#define NRF24L01_RX_PW_P5			nrf24l01_rd_reg_byte(NRF24L01_REG_RX_PW_P5)



#define NRF24L01_RX_PW_P0_W(s)		nrf24l01_reg_set(NRF24L01_REG_RX_PW_P0, 0b111111, s)
#define NRF24L01_RX_PW_P1_W(s)		nrf24l01_reg_set(NRF24L01_REG_RX_PW_P1, 0b111111, s)
#define NRF24L01_RX_PW_P2_W(s)		nrf24l01_reg_set(NRF24L01_REG_RX_PW_P2, 0b111111, s)
#define NRF24L01_RX_PW_P3_W(s)		nrf24l01_reg_set(NRF24L01_REG_RX_PW_P3, 0b111111, s)
#define NRF24L01_RX_PW_P4_W(s)		nrf24l01_reg_set(NRF24L01_REG_RX_PW_P4, 0b111111, s)
#define NRF24L01_RX_PW_P5_W(s)		nrf24l01_reg_set(NRF24L01_REG_RX_PW_P5, 0b111111, s)
#define NRF24L01_FIFO_STATUS        nrf24l01_rd_reg_byte(NRF24L01_REG_FIFO_STATUS)
#define NRF24L01_DYNPD				nrf24l01_rd_reg_byte(NRF24L01_REG_DYNPD)
#define NRF24L01_DYNPD_W(s)	        nrf24l01_reg_set(NRF24L01_REG_DYNPD, 0b111111, s)
#define NRF24L01_FEATURE		    nrf24l01_rd_reg_byte(NRF24L01_REG_FEATURE)
#define NRF24L01_FEATURE_W(r, s)    nrf24l01_reg_set(NRF24L01_REG_FEATURE, r, s)

#define NRF24L01_FLUSH_TX			nrf24l01_cmd_status(NRF24L01_SPI_FLUSH_TX)
#define NRF24L01_FLUSH_RX			nrf24l01_cmd_status(NRF24L01_SPI_FLUSH_RX)
#define NRF24L01_ACTIVATE			nrf24l01_wr2_rd(NRF24L01_SPI_ACTIVATE, 0x73)
#define NRF24L01_R_RX_PL_WID		nrf24l01_wr2_rd(NRF24L01_SPI_R_RX_PL_WID, NRF24L01_SPI_NOP)
#define NRF24L01_W_ACK_PAYLOAD_W	nrf24l01_wr_bytes(NRF24L01_SPI_W_ACK_PAYLOAD)

//NRF24L01_REG_CONFIG
#define NRF24L01_REG_MASK_RX_DR      (1<<6)
#define NRF24L01_REG_MASK_TX_DS      (1<<5)
#define NRF24L01_REG_MASK_MAX_RT     (1<<4)
#define NRF24L01_REG_MASK_IRQ		 (NRF24L01_REG_MASK_RX_DR|NRF24L01_REG_MASK_TX_DS|NRF24L01_REG_MASK_MAX_RT)
#define NRF24L01_REG_EN_CRC          (1<<3)
#define NRF24L01_REG_CRCO            (1<<2)
#define NRF24L01_REG_EN_CRCO         (NRF24L01_REG_EN_CRC|NRF24L01_REG_CRCO)
#define NRF24L01_REG_PWR_UP          (1<<1)
#define NRF24L01_REG_PRIM_RX         (1<<0)

#define NRF24L01_MASK_IRQ		(NRF24L01_CONFIG&NRF24L01_REG_MASK_IRQ)
#define NRF24L01_MASK_RX_DR		(NRF24L01_CONFIG&NRF24L01_REG_MASK_RX_DR)
#define NRF24L01_MASK_TX_DS		(NRF24L01_CONFIG&NRF24L01_REG_MASK_TX_DS)
#define NRF24L01_MASK_MAX_RT	(NRF24L01_CONFIG&NRF24L01_REG_MASK_MAX_RT)
#define NRF24L01_EN_CRC         (NRF24L01_CONFIG&NRF24L01_REG_EN_CRC)
#define NRF24L01_CRCO           (NRF24L01_CONFIG&NRF24L01_REG_CRCO)
#define NRF24L01_PWR_UP	        (NRF24L01_CONFIG&NRF24L01_REG_PWR_UP)
#define NRF24L01_PRIM_RX		(NRF24L01_CONFIG&NRF24L01_REG_PRIM_RX)

#define NRF24L01_MASK_IRQ_W(x)	NRF24L01_CONFIG_W(NRF24L01_REG_MASK_IRQ, x)
#define NRF24L01_MASK_RX_DR_1	NRF24L01_CONFIG_W(NRF24L01_REG_MASK_RX_DR, NRF24L01_REG_MASK_RX_DR)
#define NRF24L01_MASK_TX_DS_1	NRF24L01_CONFIG_W(NRF24L01_REG_MASK_TX_DS, NRF24L01_REG_MASK_TX_DS)
#define NRF24L01_MASK_MAX_RT_1	NRF24L01_CONFIG_W(NRF24L01_REG_MASK_MAX_RT, NRF24L01_REG_MASK_MAX_RT)
#define NRF24L01_MASK_RX_DR_0	NRF24L01_CONFIG_W(NRF24L01_REG_MASK_RX_DR, 0)
#define NRF24L01_MASK_TX_DS_0	NRF24L01_CONFIG_W(NRF24L01_REG_MASK_TX_DS, 0)
#define NRF24L01_MASK_MAX_RT_0	NRF24L01_CONFIG_W(NRF24L01_REG_MASK_MAX_RT, 0)

#define NRF24L01_CRC_DISABLE	NRF24L01_CONFIG_W(NRF24L01_REG_EN_CRCO, 0)
#define NRF24L01_CRC_1B			NRF24L01_CONFIG_W(NRF24L01_REG_EN_CRCO, NRF24L01_REG_EN_CRC)
#define NRF24L01_CRC_2B			NRF24L01_CONFIG_W(NRF24L01_REG_EN_CRCO, NRF24L01_REG_EN_CRC | NRF24L01_REG_CRCO)
#define NRF24L01_PWR_UP_UP		NRF24L01_CONFIG_W(NRF24L01_REG_PWR_UP, NRF24L01_REG_PWR_UP)
#define NRF24L01_PWR_UP_DOWN	NRF24L01_CONFIG_W(NRF24L01_REG_PWR_UP, 0)
#define NRF24L01_PRIM_RX_1		NRF24L01_CONFIG_W(NRF24L01_REG_PRIM_RX, NRF24L01_REG_PRIM_RX)
#define NRF24L01_PRIM_RX_0		NRF24L01_CONFIG_W(NRF24L01_REG_PRIM_RX, 0)

//NRF24L01_REG_RF_SETUP
#define NRF24L01_REG_PLL_LOCK    (1<<4)
#define NRF24L01_REG_RF_DR_LOW   (1<<5)
#define NRF24L01_REG_RF_DR_HIGH  (1<<3)
#define NRF24L01_REG_RF_PWR		 0b110
#define NRF24L01_REG_RF_PWR_0	 1
#define NRF24L01_REG_LNA_HCURR   (1<<0)

#define NRF24L01_PLL_LOCK		(NRF24L01_RF_SETUP&NRF24L01_REG_PLL_LOCK)
#define NRF24L01_RF_DR			(NRF24L01_RF_SETUP&NRF24L01_REG_RF_DR)
#define NRF24L01_RF_PWR			(NRF24L01_RF_SETUP&NRF24L01_REG_RF_PWR)
#define NRF24L01_LNA_HCURR		(NRF24L01_RF_SETUP&NRF24L01_REG_LNA_HCURR)

#define NRF24L01_RF_DR_W(x)		NRF24L01_RF_SETUP_W(NRF24L01_REG_RF_DR_LOW|NRF24L01_REG_RF_DR_HIGH, x)
#define NRF24L01_RF_DR_1MBPS	NRF24L01_RF_DR_W(0)
#define NRF24L01_RF_DR_2MBPS	NRF24L01_RF_DR_W(NRF24L01_REG_RF_DR_HIGH)
#define NRF24L01_RF_DR_5MBPS	NRF24L01_RF_DR_W(NRF24L01_REG_RF_DR_LOW|NRF24L01_REG_RF_DR_HIGH)

#define NRF24L01_RF_PWR_W(x)	NRF24L01_RF_SETUP_W(NRF24L01_REG_RF_PWR, x<<NRF24L01_REG_RF_PWR_0)
#define NRF24L01_RF_PWR_18dBm	NRF24L01_RF_PWR_W(0) 
#define NRF24L01_RF_PWR_12dBm	NRF24L01_RF_PWR_W(1) 
#define NRF24L01_RF_PWR_6dBm	NRF24L01_RF_PWR_W(2) 
#define NRF24L01_RF_PWR_0dBm	NRF24L01_RF_PWR_W(3) 
// NRF24L01_LNA_HCURR_1(1.5dB reduction)
#define NRF24L01_LNA_HCURR_1dB		NRF24L01_RF_SETUP_W(NRF24L01_REG_LNA_HCURR, NRF24L01_REG_LNA_HCURR)
#define NRF24L01_LNA_HCURR_0dB		NRF24L01_RF_SETUP_W(NRF24L01_REG_LNA_HCURR, 0)

//NRF24L01_REG_STATUS
#define NRF24L01_REG_RX_DR          (1<<6)
#define NRF24L01_REG_TX_DS          (1<<5)
#define NRF24L01_REG_MAX_RT         (1<<4)
#define NRF24L01_REG_STATUS_IRQ		(NRF24L01_REG_RX_DR | NRF24L01_REG_TX_DS | NRF24L01_REG_MAX_RT)
#define NRF24L01_REG_RX_P_NO		0b1110
#define NRF24L01_REG_RX_P_NO_0      1
#define NRF24L01_REG_TX_FULL		1

#define NRF24L01_RX_DR				(NRF24L01_STATUS & NRF24L01_REG_RX_DR)
#define NRF24L01_TX_DS				(NRF24L01_STATUS & NRF24L01_REG_TX_DS)
#define NRF24L01_MAX_RT				(NRF24L01_STATUS & NRF24L01_REG_MAX_RT)
#define NRF24L01_RX_P_NO			((NRF24L01_STATUS & NRF24L01_REG_RX_P_NO)>>NRF24L01_REG_RX_P_NO_0)
#define NRF24L01_TX_FULL			(NRF24L01_STATUS & NRF24L01_REG_TX_FULL)

#define NRF24L01_STATUS_RESET		NRF24L01_STATUS_W(NRF24L01_REG_STATUS_IRQ, NRF24L01_REG_STATUS_IRQ)
#define NRF24L01_RX_DR_1			NRF24L01_STATUS_W(NRF24L01_REG_RX_DR, NRF24L01_REG_RX_DR)
#define NRF24L01_TX_DS_1			NRF24L01_STATUS_W(NRF24L01_REG_TX_DS, NRF24L01_REG_TX_DS)
#define NRF24L01_MAX_RT_1			NRF24L01_STATUS_W(NRF24L01_REG_MAX_RT, NRF24L01_REG_MAX_RT)
#define NRF24L01_RX_DR_0			NRF24L01_STATUS_W(NRF24L01_REG_RX_DR,  0)
#define NRF24L01_TX_DS_0			NRF24L01_STATUS_W(NRF24L01_REG_TX_DS,  0)
#define NRF24L01_MAX_RT_0			NRF24L01_STATUS_W(NRF24L01_REG_MAX_RT, 0)
#define NRF24L01_RX_P_NO_W(x)       NRF24L01_STATUS_W(NRF24L01_REG_RX_P_NO, (x & NRF24L01_REG_RX_P_NO)<<NRF24L01_REG_RX_P_NO_0)

//NRF24L01_REG_OBSERVE_TX
#define NRF24L01_REG_PLOS_CNT		0xF0
#define NRF24L01_REG_PLOS_CNT_0		4
#define NRF24L01_REG_ARC_CNT		0x0F
#define NRF24L01_REG_ARC_CNT_0		0

#define NRF24L01_PLOS_CNT			((NRF24L01_OBSERVE_TX&NRF24L01_REG_PLOS_CNT)>>NRF24L01_REG_PLOS_CNT_0)
#define NRF24L01_ARC_CNT			((NRF24L01_OBSERVE_TX&NRF24L01_REG_PLOS_CNT)>>NRF24L01_REG_PLOS_CNT_0)

//NRF24L01_REG_FIFO_STATUS
#define NRF24L01_REG_TX_REUSE   (1<<6)
#define NRF24L01_REG_FIFO_FULL  (1<<5)
#define NRF24L01_REG_TX_EMPTY   (1<<4)
#define NRF24L01_REG_RX_FULL    (1<<1)
#define NRF24L01_REG_RX_EMPTY   (1<<0)

#define NRF24L01_TX_REUSE		(NRF24L01_FIFO_STATUS & NRF24L01_REG_TX_REUSE)
#define NRF24L01_FIFO_FULL		(NRF24L01_FIFO_STATUS & NRF24L01_REG_FIFO_FULL)
#define NRF24L01_TX_EMPTY		(NRF24L01_FIFO_STATUS & NRF24L01_REG_TX_EMPTY)
#define NRF24L01_RX_FULL		(NRF24L01_FIFO_STATUS & NRF24L01_REG_RX_FULL)
#define NRF24L01_RX_EMPTY		(NRF24L01_FIFO_STATUS & NRF24L01_REG_RX_EMPTY)

//NRF24L01_REG_FEATURE
#define NRF24L01_REG_EN_DPL		(1<<2)
#define NRF24L01_REG_EN_ACK_PAY (1<<1)
#define NRF24L01_REG_EN_DYN_ACK (1<<0)
#define NRF24L01_EN_DPL 		(NRF24L01_FEATURE&NRF24L01_REG_EN_DPL)
#define NRF24L01_EN_ACK_PAY		(NRF24L01_FEATURE&NRF24L01_REG_EN_ACK_PAY)
#define NRF24L01_EN_DYN_ACK		(NRF24L01_FEATURE&NRF24L01_REG_EN_DYN_ACK)
#define NRF24L01_EN_DPL_1 		NRF24L01_FEATURE_W(NRF24L01_REG_EN_DPL, 0xFF)
#define NRF24L01_EN_ACK_PAY_1	NRF24L01_FEATURE_W(NRF24L01_REG_EN_ACK_PAY, 0xFF)
#define NRF24L01_EN_DYN_ACK_1	NRF24L01_FEATURE_W(NRF24L01_REG_EN_DYN_ACK, 0xFF)
#define NRF24L01_EN_DPL_0 		NRF24L01_FEATURE_W(NRF24L01_REG_EN_DPL, 0)
#define NRF24L01_EN_ACK_PAY_0	NRF24L01_FEATURE_W(NRF24L01_REG_EN_ACK_PAY, 0)
#define NRF24L01_EN_DYN_ACK_0	NRF24L01_FEATURE_W(NRF24L01_REG_EN_DYN_ACK, 0)


/****NRF24L01_MODE *******************/ 
//extern void nrf24l01_set_RX_mode();
//extern void nrf24l01_set_TX_mode();
#define NRF24L01_MODE_PWR_DOWN	NRF24L01_PWR_UP_DOWN
#define NRF24L01_MODE_PWR_UP	{if (!NRF24L01_PWR_UP) {NRF24L01_PWR_UP_UP; _delay_us(1500);}}
#define NRF24L01_MODE_SET_RX	NRF24L01_PRIM_RX_1
#define NRF24L01_MODE_SET_TX	NRF24L01_PRIM_RX_0
/****NRF24L01_STATUS *******************/


//high CSN, init spi, low CE
#define NRF24L01_INIT {rf24_PIN_INIT; nrf24l01_CElo; nrf24l01_CSNhi;}
#define NRF24L01_RX_PW_PS_W(x) 	for (uint8_t i=NRF24L01_REG_RX_PW_P0; i<=NRF24L01_REG_RX_PW_P5;i++) {nrf24l01_wr_reg_byte(i, x);}

// Первоначальные установки
#define NRF24L01_STANDBY(addr, data, len) \
	NRF24L01_INIT;\
	NRF24L01_RF_CH_W(76);\
	NRF24L01_RX_PW_PS_W(PAYLOAD_BUFFER);/*PAYLOAD WIDTH*/\
	NRF24L01_SETUP_AW_W(5);/*ADDRESS WIDTH*/\
	NRF24L01_CRC_2B; /*set crc 2b*/ \
	NRF24L01_RF_PWR_18dBm; /*set power level 0..3*/\
	NRF24L01_RF_DR_1MBPS; /*1MBPS, 2MBPS*/\
	NRF24L01_LNA_HCURR_1dB; /* нет усиления сигнала 1.5dB +?- */\
	NRF24L01_SETUP_RETR_W(250, 10); /*set retries 250uS, 10 times*/\
	NRF24L01_EN_AA_W(0b111111); /*pipe 0..5 AutoAsc ENABLE*/\
	NRF24L01_DYNPD_W(0b111111) ; /*Enable dynamic payloads 0..5*/\
	NRF24L01_EN_DPL_1;/*Enable dynamic payloads*/\
	NRF24L01_MODE_STANDBY_SET;

// Определение  посылки данных PTX
// addr - адрес получателя, data - указатель на буфер данных, len - длинна буфера
#define NRF24L01_SEND(addr, data, len) 	 NRF24L01_STATUS_RESET;\
	 NRF24L01_RX_ADDR_P0_W(addr, 5); /*адресс автоответа*/\
	 NRF24L01_TX_ADDR_W(addr, 5); /* адрес получателя */\
	 NRF24L01_W_TX_PAYLOAD(data, len); /*загрука данных*/\
	 NRF24L01_PRIM_RX_0;\
	 nrf24l01_CEhi; /* держать 10us, загрузить еще данные,  сделать что - либо*/\
	 _delay_us(10); nrf24l01_CElo; /*10us CElo подождать 130us*/\
	 while (!(NRF24L01_STATUS&(NRF24L01_REG_TX_DS|NRF24L01_REG_MAX_RT))) {_delay_us(10);}\
	 if (!(NRF24L01_STATUS&NRF24L01_REG_TX_DS)) {NRF24L01_FLUSH_TX;/*стереть неотправленные*/}

// Прием 
#define NRF24L01_RX  \
	while(1) {int8_t pipe = NRF24L01_RX_P_NO;\
		if (pipe == 7) break; \
		int8_t l = NRF24L01_EN_DPL ? NRF24L01_R_RX_PL_WID : PAYLOAD_BUFFER; \
		NRF24L01_R_RX_PAYLOAD(bufferin, l);}\
 	 NRF24L01_STATUS_RESET;
	  
	  
	  
#endif
